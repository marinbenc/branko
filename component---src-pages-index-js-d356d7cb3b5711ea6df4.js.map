{"version":3,"sources":["webpack:///./src/utils/typography.js","webpack:///./src/pages/index.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/components/layout.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js"],"names":["Wordpress2016","overrideThemeStyles","a.gatsby-resp-image-link","boxShadow","googleFonts","typography","Typography","rhythm","scale","BlogIndex","groupByFirstLetter","posts","reduced","reduce","acc","_ref","node","startsWith","english","charAt","toLowerCase","children","push","Object","values","renderWord","croatian","note","source","react_default","a","createElement","className","key","gatsby_browser_entry","to","react_markdown_default","render","_this2","this","data","props","siteTitle","site","siteMetadata","title","allWordsJson","edges","sort","p1","p2","grouped","layout","location","seo","keywords","map","group","href","id","React","Component","pageQuery","m","module","exports","require","default","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","d","__webpack_exports__","createContext","PropTypes","object","string","isRequired","func","Layout","header","_this$props","__PATH_PREFIX__","pathname","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_2__","ProdPageRenderer","pageResources","loader","getResourcesForPathnameSync","InternalPageRenderer","assign","json","propTypes","shape","SEO","description","lang","meta","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","defaultProps","arrayOf"],"mappings":"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","file":"component---src-pages-index-js-d356d7cb3b5711ea6df4.js","sourcesContent":["import Typography from \"typography\"\nimport Wordpress2016 from \"typography-theme-wordpress-2016\"\n\nWordpress2016.overrideThemeStyles = () => {\n  return {\n    \"a.gatsby-resp-image-link\": {\n      boxShadow: `none`,\n    },\n  }\n}\n\ndelete Wordpress2016.googleFonts\n\nconst typography = new Typography(Wordpress2016)\n\n// Hot reload typography in development.\nif (process.env.NODE_ENV !== `production`) {\n  typography.injectStyles()\n}\n\nexport default typography\nexport const rhythm = typography.rhythm\nexport const scale = typography.scale\n","import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\nimport ReactMarkdown from \"react-markdown\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport { rhythm } from \"../utils/typography\"\n\nclass BlogIndex extends React.Component {\n\n  groupByFirstLetter = (posts) => {\n    const reduced = posts.reduce((acc, { node }) => {\n      const startsWith = node.english.charAt(0).toLowerCase()\n      if (!acc[startsWith]) {\n        acc[startsWith] = {startsWith, children: [node]}\n      } else {\n        acc[startsWith].children.push(node)\n      }\n      return acc\n    }, {})\n\n    return Object.values(reduced)\n  }\n\n  renderWord = (node) => {\n    const { english, croatian, note, source } = node\n    return (\n      <div className=\"word\" key={english}>\n        <h3>\n          <Link to={english}>\n            {english}\n          </Link>\n        </h3>\n        <p><ReactMarkdown source={croatian} /></p>\n        {note && <small>{\"note\"}</small>}\n        {source && <small className=\"source\">(izvor: <ReactMarkdown source={source} />)</small>}\n      </div>\n    )\n  }\n\n  render() {\n    const { data } = this.props\n    const siteTitle = data.site.siteMetadata.title\n    const posts = data.allWordsJson.edges\n    posts.sort((p1, p2) => { return p1.node.english.toLowerCase() < p2.node.english.toLowerCase() ? -1 : 1 })\n    const grouped = this.groupByFirstLetter(posts)\n\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <SEO\n          title=\"Branko - englesko hrvatski IT riječnik otvorenog koda\"\n          keywords={[`prijevod`, `hrvatsko`, `engleski`, `računarstvo`, `programiranje`, `IT`]}\n        />\n        <nav>\n          <ul className=\"letters\">\n            {grouped.map((group) => {\n              return (\n                <li>\n                  <a href={\"#\" + group.startsWith}>{group.startsWith}</a>\n                </li>\n              )\n            })}\n          </ul>\n        </nav>\n        {grouped.map((group) => {\n          return (\n            <div className=\"words-for-letter\" id={group.startsWith}>\n              <h2>\n                <a href={\"#\" + group.startsWith}>{group.startsWith}</a>\n              </h2>\n              {group.children.map(this.renderWord)}\n            </div>\n          )\n        })}\n      </Layout>\n    )\n  }\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allWordsJson {\n      edges {\n        node {\n          english\n          croatian\n          note\n          source\n        }\n      }\n    }  \n  }\n`\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import React from \"react\"\nimport { Link } from \"gatsby\"\n\nclass Layout extends React.Component {\n  render() {\n    const { location, title, children } = this.props\n    const rootPath = `${__PATH_PREFIX__}/`\n    let header\n\n    if (location.pathname === rootPath) {\n      header = (\n        <div>\n          <h1 className=\"site-title\">\n            <Link to={`/`}>\n              {title}\n            </Link>\n          </h1>\n          <h2 className=\"site-subtitle\">\n            englesko hrvatski IT riječnik otvorenog koda\n          </h2>\n        </div>\n      )\n    } else {\n      header = (\n        <h3 className=\"page-title\">\n          <Link to={`/`}>\n            {title}\n          </Link>\n        </h3>\n      )\n    }\n\n    return (\n      <div className=\"root\">\n        <header>{header}</header>\n        <main>{children}</main>\n        <footer>\n          Branko je <a href=\"github.com\">riječnik otvorenog koda i svi su pozvani dodati nove riječi</a>.<br />\n          Održava <a href=\"marinbenc.com\">Marin Benčević</a>.\n        </footer>\n      </div>\n    )\n  }\n}\n\nexport default Layout\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : []\n        )\n        .concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n"],"sourceRoot":""}