{"version":3,"sources":["webpack:///./src/templates/word.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/layout.js","webpack:///./src/components/seo.js","webpack:///./src/components/word.js"],"names":["WordTemplate","render","siteTitle","this","props","data","site","siteMetadata","title","word","pageContext","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_3__","location","className","_components_seo__WEBPACK_IMPORTED_MODULE_4__","english","description","croatian","_components_word__WEBPACK_IMPORTED_MODULE_5__","node","gatsby__WEBPACK_IMPORTED_MODULE_2__","to","React","Component","pageQuery","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","d","__webpack_exports__","createContext","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","_ref","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","propTypes","shape","Layout","_this$props","children","header","href","SEO","lang","meta","keywords","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","defaultProps","arrayOf","Word","text","_props$data","note","source","react__WEBPACK_IMPORTED_MODULE_3___default","key","gatsby__WEBPACK_IMPORTED_MODULE_4__","toString","toLowerCase","replace","react_markdown__WEBPACK_IMPORTED_MODULE_5___default"],"mappings":"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","file":"component---src-templates-word-js-011a4cf92b1132de3824.js","sourcesContent":["import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport Word from \"../components/word\"\n\nclass WordTemplate extends React.Component {\n  render() {\n    const siteTitle = this.props.data.site.siteMetadata.title\n    const { word } = this.props.pageContext\n\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <div className=\"word-page\">\n          <SEO\n            title={word.english + \"| Branko - englesko hrvatski riječnik otvorenog koda\"}\n            description={word.english + \" prijevod na hrvatski jezik: \" + word.croatian}\n          />\n          <Word data={word.node} />\n          <Link className=\"back\" to={\"/\"}>\n          ← povratak na pretragu\n          </Link>\n        </div>\n      </Layout>\n    )\n  }\n}\n\nexport default WordTemplate\n\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allWordsJson {\n      edges {\n        node {\n          english\n          croatian\n          note\n          source\n        }\n      }\n    }\n  }\n`","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from \"react\"\nimport { Link } from \"gatsby\"\n\nclass Layout extends React.Component {\n  render() {\n    const { location, title, children } = this.props\n    const rootPath = `${__PATH_PREFIX__}/`\n    const header = (\n      <div>\n        <h1 className=\"site-title\">\n          <Link to={`/`}>\n            {title}\n          </Link>\n        </h1>\n        <h2 className=\"site-subtitle\">\n          englesko hrvatski IT riječnik otvorenog koda\n        </h2>\n      </div>\n    )\n\n    return (\n      <div className=\"root\">\n        <header>\n          {header}\n          <a className=\"github-link\" href=\"https://github.com/marinbenc/branko\">Dodaj novu riječ</a>\n        </header>\n        <main>{children}</main>\n        <footer>\n          Branko je <a href=\"https://github.com/marinbenc/branko\">riječnik otvorenog koda i svi su pozvani dodati nove riječi</a>.<br />\n          Održava <a href=\"http://marinbenc.com\">Marin Benčević</a>.\n        </footer>\n      </div>\n    )\n  }\n}\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : []\n        )\n        .concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import React from \"react\"\nimport { Link } from \"gatsby\"\nimport ReactMarkdown from \"react-markdown\"\n\nfunction slugify(text) {\n  return text.toString().toLowerCase()\n    .replace(/\\s+/g, '-')           // Replace spaces with -\n    .replace(/[^\\w\\-]+/g, '')       // Remove all non-word chars\n    .replace(/\\-\\-+/g, '-')         // Replace multiple - with single -\n    .replace(/^-+/, '')             // Trim - from start of text\n    .replace(/-+$/, '');            // Trim - from end of text\n}\n\nexport default function Word(props) {\n  const { english, croatian, note, source } = props.data\n  return (\n    <div className=\"word\" key={english}>\n      <h3>\n        <Link to={slugify(english)}>\n          {english}\n        </Link>\n      </h3>\n      <p><ReactMarkdown source={croatian} /></p>\n      {note && <small>{\"note\"}</small>}\n      {source && <small className=\"source\">(izvor: <ReactMarkdown source={source} />)</small>}\n    </div>\n  )\n}"],"sourceRoot":""}