{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/layout.js","webpack:///./src/components/seo.js","webpack:///./src/components/word.js"],"names":["WordsIndex","props","_this","_React$Component","call","this","getOrCreateSearchIndex","index","Index","load","data","siteSearchIndex","search","evt","query","target","value","results","expand","map","_ref","ref","node","documentStore","getDoc","filter","_ref2","undefined","sort","p1","p2","english","toLowerCase","grouped","groupByFirstLetter","setState","posts","reduced","reduce","acc","_ref3","startsWith","charAt","children","push","Object","values","renderWord","react__WEBPACK_IMPORTED_MODULE_8___default","a","createElement","_components_word__WEBPACK_IMPORTED_MODULE_12__","words","allWordsJson","edges","allData","console","log","state","render","_this2","siteTitle","site","siteMetadata","title","_components_layout__WEBPACK_IMPORTED_MODULE_10__","location","_components_seo__WEBPACK_IMPORTED_MODULE_11__","keywords","className","type","onChange","placeholder","group","href","id","React","Component","pageQuery","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","d","__webpack_exports__","createContext","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","assign","json","propTypes","shape","Layout","_this$props","header","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_2__","to","SEO","description","lang","meta","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","defaultProps","arrayOf","Word","text","_props$data","croatian","note","source","react__WEBPACK_IMPORTED_MODULE_3___default","key","gatsby__WEBPACK_IMPORTED_MODULE_4__","toString","replace","react_markdown__WEBPACK_IMPORTED_MODULE_5___default"],"mappings":"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","file":"component---src-pages-index-js-620ba548c18567cfe242.js","sourcesContent":["import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport { Index } from \"elasticlunr\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport Word from \"../components/word\"\n\nclass WordsIndex extends React.Component {\n\n  constructor(props) {\n    super(props)\n    const words = this.props.data.allWordsJson.edges\n    words.sort((p1, p2) => { return p1.node.english.toLowerCase() < p2.node.english.toLowerCase() ? -1 : 1 })\n    const grouped = this.groupByFirstLetter(words)\n    this.allData = grouped\n\n    console.log(this.props.data)\n\n    this.state = {\n      query: ``,\n      results: this.allData,\n    }\n  }\n\n  getOrCreateSearchIndex = () =>\n  this.index\n    ? this.index\n    : // Create an elastic lunr index and hydrate with graphql query results\n      Index.load(this.props.data.siteSearchIndex.index)\n\n  search = evt => {\n    const query = evt.target.value\n    this.index = this.getOrCreateSearchIndex()\n\n    const results = this.index\n      .search(query, { expand: true }) // Accept partial matches\n      .map(({ ref }) => {return {node: this.index.documentStore.getDoc(ref)}})\n      .filter(({ node }) => node != undefined)\n    results.sort((p1, p2) => { return p1.node.english.toLowerCase() < p2.node.english.toLowerCase() ? -1 : 1 })\n    const grouped = this.groupByFirstLetter(results)\n\n    this.setState({\n      query,\n      results: grouped,\n    })\n  }\n\n  groupByFirstLetter = (posts) => {\n    const reduced = posts.reduce((acc, { node }) => {\n      const startsWith = node.english.charAt(0).toLowerCase()\n      if (!acc[startsWith]) {\n        acc[startsWith] = {startsWith, children: [node]}\n      } else {\n        acc[startsWith].children.push(node)\n      }\n      return acc\n    }, {})\n\n    return Object.values(reduced)\n  }\n\n  renderWord = (node) => {\n    return (\n      <Word data={node} />\n    )\n  }\n\n  render() {\n\n    const { data } = this.props\n    const siteTitle = data.site.siteMetadata.title\n    const grouped = this.state.query ? this.state.results : this.allData\n\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <SEO\n          title=\"Branko - englesko hrvatski IT riječnik otvorenog koda\"\n          keywords={[`prijevod`, `hrvatsko`, `engleski`, `računarstvo`, `programiranje`, `IT`]}\n        />\n        <input className=\"search-box\" type=\"text\" value={this.state.query} onChange={this.search} placeholder={\"Traži\"}/>\n        <nav>\n          <ul className=\"letters\">\n            {grouped.map(group => {\n              return (\n                <li>\n                  <a href={\"#\" + group.startsWith}>{group.startsWith}</a>\n                </li>\n              )\n            })}\n          </ul>\n        </nav>\n        {grouped.map(group => {\n          return (\n            <div className=\"words-for-letter\" id={group.startsWith}>\n              <h2>\n                <a href={\"#\" + group.startsWith}>{group.startsWith}</a>\n              </h2>\n              {group.children.map(this.renderWord)}\n            </div>\n          )\n        })}\n      </Layout>\n    )\n  }\n}\n\nexport default WordsIndex\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allWordsJson {\n      edges {\n        node {\n          english\n          croatian\n          note\n          source\n        }\n      }\n    }\n    siteSearchIndex {\n      index\n    }\n  }\n`\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from \"react\"\nimport { Link } from \"gatsby\"\n\nclass Layout extends React.Component {\n  render() {\n    const { location, title, children } = this.props\n    const rootPath = `${__PATH_PREFIX__}/`\n    const header = (\n      <div>\n        <h1 className=\"site-title\">\n          <Link to={`/`}>\n            {title}\n          </Link>\n        </h1>\n        <h2 className=\"site-subtitle\">\n          englesko hrvatski IT rječnik otvorenog koda\n        </h2>\n      </div>\n    )\n\n    return (\n      <div className=\"root\">\n        <header>\n          {header}\n          <a className=\"github-link\" href=\"https://github.com/marinbenc/branko\">Dodaj novu riječ</a>\n        </header>\n        <main>{children}</main>\n        <footer>\n          Branko je <a href=\"https://github.com/marinbenc/branko\">rječnik otvorenog koda i svi su pozvani dodati nove riječi</a>.<br />\n          Održava <a href=\"http://marinbenc.com\">Marin Benčević</a>.\n        </footer>\n      </div>\n    )\n  }\n}\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : []\n        )\n        .concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import React from \"react\"\nimport { Link } from \"gatsby\"\nimport ReactMarkdown from \"react-markdown\"\n\nfunction slugify(text) {\n  return text.toString().toLowerCase()\n    .replace(/\\s+/g, '-')           // Replace spaces with -\n    .replace(/[^\\w\\-]+/g, '')       // Remove all non-word chars\n    .replace(/\\-\\-+/g, '-')         // Replace multiple - with single -\n    .replace(/^-+/, '')             // Trim - from start of text\n    .replace(/-+$/, '');            // Trim - from end of text\n}\n\nexport default function Word(props) {\n  const { english, croatian, note, source } = props.data\n  return (\n    <div className=\"word\" key={english}>\n      <h3>\n        <Link to={slugify(english)}>\n          {english}\n        </Link>\n      </h3>\n      <p><ReactMarkdown source={croatian} /></p>\n      {note && <small>{\"note\"}</small>}\n      {source && <small className=\"source\">(izvor: <ReactMarkdown source={source} />)</small>}\n    </div>\n  )\n}"],"sourceRoot":""}